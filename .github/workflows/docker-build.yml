name: Build BPC Docker Image

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ibpc_pose_estimator_py/**'
      - 'Dockerfile.estimator'
      - 'models/**'
  pull_request:
    branches: [ main ]
  # Manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bpc_pose_estimator
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
            latest
      
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.estimator
          build-args: |
            MODEL_DIR=models
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test Docker image
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/bpc_pose_estimator:${{ github.sha }} python -c "import ibpc_pose_estimator_py; print('Import successful')"
      
      - name: Archive build logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: |
            ./*.log
            ./logs/
          retention-days: 5
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.issue.number;
            if (issue_number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '⚠️ Docker build failed! Check the logs in the GitHub Actions tab.'
              });
            } 